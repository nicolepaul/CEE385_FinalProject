function fig_hdl = SPAT
%% -------------------------------------------------------------

defaultFigureProperties;

% Initialize handles structure
handles = struct();

% Create all UI controls
build_gui();

% Assign function output
fig_hdl = handles.mainfigure;

%% ---------------------------------------------------------------------------
    function build_gui()
        % Creation of all uicontrols
        
        % Get size of screen in pixels
        set(0,'units','pixels')
        Pix_SS = get(0,'screensize');
        % Adjust display to these dimensions
        xmult = Pix_SS(3)/1280; % originally was on 1280x800 display, so need to adjust for current size NOTE: may not work well for displays smaller than a 13" Macbook w/o retina display
        ymult = Pix_SS(4)/800;
        ppinv = [1*xmult 1*ymult 1*xmult 1*ymult];
        handles.ppinv = ppinv;
        
        % Initialization
        handles.edptext = {''};
        handles.compnames = {''};
        
        % --- FIGURE -------------------------------------
        handles.mainfigure = figure( ...
            'Tag', 'mainfigure', ...
            'Units', 'characters', ...
            'Position', ppinv.*[10 10 180 50], ...
            'Name', 'Seismic Performance Assessment Tool v1.0 - Nicole Paul', ...
            'MenuBar', 'none', ...
            'NumberTitle', 'off', ...
            'Color', [1 1 1]);
        
        % --- PANELS -------------------------------------
        handles.TITLEBAR = uipanel( ...
            'Parent', handles.mainfigure, ...
            'Tag', 'TITLEBAR', ...
            'Units', 'characters', ...
            'Position', ppinv.*[0 45 180 5], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'ForegroundColor', [1 1 1], ...
            'BackgroundColor', [1 1 1], ...
            'Title', 'TITLEBAR', ...
            'ShadowColor', [1 1 1]);
        
        
        handles.SELECTBAR = uipanel( ...
            'Parent', handles.mainfigure, ...
            'Tag', 'SELECTBAR', ...
            'Units', 'characters', ...
            'Position', ppinv.*[0 42 180 3], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'ForegroundColor', [1 1 1], ...
            'BackgroundColor', [1 1 1], ...
            'Title', 'SELECTBAR', ...
            'ShadowColor', [1 1 1]);
        
        handles.INPUTS = uipanel( ...
            'Parent', handles.mainfigure, ...
            'Tag', 'INPUTS', ...
            'Units', 'characters', ...
            'Position', ppinv.*[0 20 50 21], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'ForegroundColor', [1 1 1], ...
            'BackgroundColor', [1 1 1], ...
            'Title', 'INPUTS', ...
            'ShadowColor', [1 1 1]);
        
        handles.OUTPUTS = uipanel( ...
            'Parent', handles.mainfigure, ...
            'Tag', 'OUTPUTS', ...
            'Units', 'characters', ...
            'Position', ppinv.*[0 0 50 20], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'ForegroundColor', [1 1 1], ...
            'BackgroundColor', [1 1 1], ...
            'Title', 'OUTPUTS', ...
            'ShadowColor', [1 1 1]);
        
        handles.MAINWINDOW = uipanel( ...
            'Parent', handles.mainfigure, ...
            'Tag', 'MAINWINDOW', ...
            'Units', 'characters', ...
            'Position', ppinv.*[50 0 130 41], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'ForegroundColor', [1 1 1], ...
            'BackgroundColor', [1 1 1], ...
            'Title', 'MAINWINDOW', ...
            'ShadowColor', [1 1 1]);
        
        handles.MAINWINDOW2 = uipanel( ...
            'Parent', handles.mainfigure, ...
            'Tag', 'MAINWINDOW2', ...
            'Units', 'characters', ...
            'Position', ppinv.*[50 0 130 41], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'ForegroundColor', [1 1 1], ...
            'BackgroundColor', [1 1 1], ...
            'Title', 'MAINWINDOW2', ...
            'Visible', 'off', ...
            'ShadowColor', [1 1 1]);
        
        handles.MAINWINDOW3 = uipanel( ...
            'Parent', handles.mainfigure, ...
            'Tag', 'MAINWINDOW3', ...
            'Units', 'characters', ...
            'Position', ppinv.*[50 0 130 41], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'ForegroundColor', [1 1 1], ...
            'BackgroundColor', [1 1 1], ...
            'Title', 'MAINWINDOW3', ...
            'Visible', 'off', ...
            'ShadowColor', [1 1 1]);
        
        handles.MAINWINDOW4 = uipanel( ...
            'Parent', handles.mainfigure, ...
            'Tag', 'MAINWINDOW4', ...
            'Units', 'characters', ...
            'Position', ppinv.*[50 0 130 41], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'ForegroundColor', [1 1 1], ...
            'BackgroundColor', [1 1 1], ...
            'Title', 'MAINWINDOW4', ...
            'Visible', 'off', ...
            'ShadowColor', [1 1 1]);
        
        handles.MAINWINDOW5 = uipanel( ...
            'Parent', handles.mainfigure, ...
            'Tag', 'MAINWINDOW5', ...
            'Units', 'characters', ...
            'Position', ppinv.*[50 0 130 41], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'ForegroundColor', [1 1 1], ...
            'BackgroundColor', [1 1 1], ...
            'Title', 'MAINWINDOW5', ...
            'Visible', 'off', ...
            'ShadowColor', [1 1 1]);
        
        handles.PLOTOPTIONS = uipanel( ...
            'Parent', handles.MAINWINDOW, ...
            'Tag', 'PLOTOPTIONS2', ...
            'Units', 'characters', ...
            'Position', ppinv.*[65 2 53 16], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'ForegroundColor', [1 1 1], ...
            'BackgroundColor', [1 1 1], ...
            'Title', 'PLOTOPTIONS', ...
            'Visible', 'off', ...
            'ShadowColor', [1 1 1]);
        
        % Seismic Response panels
        handles.INPUTS2 = uipanel( ...
            'Parent', handles.mainfigure, ...
            'Tag', 'INPUTS2', ...
            'Units', 'characters', ...
            'Position', ppinv.*[0 20 50 21], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'ForegroundColor', [1 1 1], ...
            'BackgroundColor', [1 1 1], ...
            'Title', 'INPUTS2', ...
            'Visible', 'off', ...
            'ShadowColor', [1 1 1]);
        
        handles.OUTPUTS2 = uipanel( ...
            'Parent', handles.mainfigure, ...
            'Tag', 'OUTPUTS2', ...
            'Units', 'characters', ...
            'Position', ppinv.*[0 0 50 20], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'ForegroundColor', [1 1 1], ...
            'BackgroundColor', [1 1 1], ...
            'Title', 'OUTPUTS2', ...
            'Visible', 'off', ...
            'ShadowColor', [1 1 1]);
        
        handles.PLOTOPTIONS2 = uipanel( ...
            'Parent', handles.MAINWINDOW2, ...
            'Tag', 'PLOTOPTIONS2', ...
            'Units', 'characters', ...
            'Position', ppinv.*[65 2 53 16], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'ForegroundColor', [1 1 1], ...
            'BackgroundColor', [1 1 1], ...
            'Title', 'PLOTOPTIONS2', ...
            'Visible', 'off', ...
            'ShadowColor', [1 1 1]);
        
        % Collapse Risk panels
        handles.INPUTS3 = uipanel( ...
            'Parent', handles.mainfigure, ...
            'Tag', 'INPUTS3', ...
            'Units', 'characters', ...
            'Position', ppinv.*[0 20 50 21], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'ForegroundColor', [1 1 1], ...
            'BackgroundColor', [1 1 1], ...
            'Title', 'INPUTS3', ...
            'Visible', 'off', ...
            'ShadowColor', [1 1 1]);
        
        handles.OUTPUTS3 = uipanel( ...
            'Parent', handles.mainfigure, ...
            'Tag', 'OUTPUTS3', ...
            'Units', 'characters', ...
            'Position', ppinv.*[0 0 50 20], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'ForegroundColor', [1 1 1], ...
            'BackgroundColor', [1 1 1], ...
            'Title', 'OUTPUTS3', ...
            'Visible', 'off', ...
            'ShadowColor', [1 1 1]);
        
        handles.PLOTOPTIONS3 = uipanel( ...
            'Parent', handles.MAINWINDOW3, ...
            'Tag', 'PLOTOPTIONS3', ...
            'Units', 'characters', ...
            'Position', ppinv.*[65 2 53 16], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'ForegroundColor', [1 1 1], ...
            'BackgroundColor', [1 1 1], ...
            'Title', 'PLOTOPTIONS3', ...
            'Visible', 'off', ...
            'ShadowColor', [1 1 1]);
        
        % Damage panel
        handles.INPUTS4 = uipanel( ...
            'Parent', handles.mainfigure, ...
            'Tag', 'INPUTS4', ...
            'Units', 'characters', ...
            'Position', ppinv.*[0 20 50 21], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'ForegroundColor', [1 1 1], ...
            'BackgroundColor', [1 1 1], ...
            'Title', 'INPUTS4', ...
            'Visible', 'off', ...
            'ShadowColor', [1 1 1]);
        
        handles.OUTPUTS4 = uipanel( ...
            'Parent', handles.mainfigure, ...
            'Tag', 'OUTPUTS4', ...
            'Units', 'characters', ...
            'Position', ppinv.*[0 0 50 20], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'ForegroundColor', [1 1 1], ...
            'BackgroundColor', [1 1 1], ...
            'Title', 'OUTPUTS4', ...
            'Visible', 'off', ...
            'ShadowColor', [1 1 1]);
        
        handles.PLOTOPTIONS4 = uipanel( ...
            'Parent', handles.MAINWINDOW4, ...
            'Tag', 'PLOTOPTIONS4', ...
            'Units', 'characters', ...
            'Position', ppinv.*[65 2 53 16], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'ForegroundColor', [1 1 1], ...
            'BackgroundColor', [1 1 1], ...
            'Title', 'PLOTOPTIONS4', ...
            'Visible', 'off', ...
            'ShadowColor', [1 1 1]);
        
        % Loss panel
        handles.INPUTS5 = uipanel( ...
            'Parent', handles.mainfigure, ...
            'Tag', 'INPUTS5', ...
            'Units', 'characters', ...
            'Position', ppinv.*[0 20 50 21], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'ForegroundColor', [1 1 1], ...
            'BackgroundColor', [1 1 1], ...
            'Title', 'INPUTS5', ...
            'Visible', 'off', ...
            'ShadowColor', [1 1 1]);
        
        handles.OUTPUTS5 = uipanel( ...
            'Parent', handles.mainfigure, ...
            'Tag', 'OUTPUTS5', ...
            'Units', 'characters', ...
            'Position', ppinv.*[0 0 50 20], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'ForegroundColor', [1 1 1], ...
            'BackgroundColor', [1 1 1], ...
            'Title', 'OUTPUTS5', ...
            'Visible', 'off', ...
            'ShadowColor', [1 1 1]);
        
        handles.PLOTOPTIONS5 = uipanel( ...
            'Parent', handles.MAINWINDOW5, ...
            'Tag', 'PLOTOPTIONS5', ...
            'Units', 'characters', ...
            'Position', ppinv.*[65 2 53 16], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'ForegroundColor', [1 1 1], ...
            'BackgroundColor', [1 1 1], ...
            'Title', 'PLOTOPTIONS5', ...
            'Visible', 'off', ...
            'ShadowColor', [1 1 1]);
        
        handles.stripedir = uicontrol( ...
            'Parent', handles.INPUTS2, ...
            'Tag', 'stripedir', ...
            'Style', 'edit', ...
            'Units', 'characters', ...
            'HorizontalAlignment', 'left', ...
            'Position', ppinv.*[2 15.3 30 2], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'FontAngle', 'oblique', ...
            'ForegroundColor', [0.5 0.5 0.5], ...
            'BackgroundColor', [1 1 1], ...
            'String', 'Open directory...');
        
        handles.inputheader2 = uicontrol( ...
            'Parent', handles.INPUTS2, ...
            'Tag', 'inputheader2', ...
            'Style', 'text', ...
            'Units', 'characters', ...
            'Position', ppinv.*[2 18 35 1], ...
            'FontName', 'Helvetica', ...
            'FontSize', 11, ...
            'FontWeight', 'bold', ...
            'BackgroundColor', [1 1 1], ...
            'String', 'SEISMIC RESPONSE INPUTS:', ...
            'HorizontalAlignment', 'left');
        
        handles.response1 = uicontrol( ...
            'Parent', handles.INPUTS2, ...
            'Tag', 'response1', ...
            'Style', 'text', ...
            'Units', 'characters', ...
            'Position', ppinv.*[2 14 35 1], ...
            'FontName', 'Helvetica', ...
            'FontSize', 11, ...
            'BackgroundColor', [1 1 1], ...
            'String', 'Number of stripes found: #', ...
            'HorizontalAlignment', 'left');
        
        handles.openstripe = uicontrol( ...
            'Parent', handles.INPUTS2, ...
            'Tag', 'openstripe', ...
            'Style', 'pushbutton', ...
            'Units', 'characters', ...
            'HorizontalAlignment', 'left', ...
            'Position', ppinv.*[33 15.6 10 1.5], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', 'Open', ...
            'Callback', @openstripe_Callback);
        
        handles.response2 = uicontrol( ...
            'Parent', handles.INPUTS2, ...
            'Tag', 'response2', ...
            'Style', 'text', ...
            'Units', 'characters', ...
            'Position', ppinv.*[2 11.25 15 1], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', 'Number of floors:', ...
            'HorizontalAlignment', 'left');
        
        handles.response3 = uicontrol( ...
            'Parent', handles.INPUTS2, ...
            'Tag', 'response3', ...
            'Style', 'text', ...
            'Units', 'characters', ...
            'Position', ppinv.*[2 9.4 15 1], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', 'Number of EDPs:', ...
            'HorizontalAlignment', 'left');
        
        handles.response4 = uicontrol( ...
            'Parent', handles.INPUTS2, ...
            'Tag', 'response4', ...
            'Style', 'text', ...
            'Units', 'characters', ...
            'Position', ppinv.*[2 7.6 15 1], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', 'Number of GMs:', ...
            'HorizontalAlignment', 'left');
        
        handles.nfloors = uicontrol( ...
            'Parent', handles.INPUTS2, ...
            'Tag', 'nfloors', ...
            'Style', 'edit', ...
            'Units', 'characters', ...
            'Position', ppinv.*[20 11 10 1.5], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', '4');
        
        handles.nedps = uicontrol( ...
            'Parent', handles.INPUTS2, ...
            'Tag', 'nedps', ...
            'Style', 'edit', ...
            'Units', 'characters', ...
            'Position', ppinv.*[20 9.15 10 1.5], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', '13');
        
        handles.ngms = uicontrol( ...
            'Parent', handles.INPUTS2, ...
            'Tag', 'ngms', ...
            'Style', 'edit', ...
            'Units', 'characters', ...
            'Position', ppinv.*[20 7.35 10 1.5], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', '20');
        
        handles.updateresponse = uicontrol( ...
            'Parent', handles.INPUTS2, ...
            'Tag', 'updateresponse', ...
            'Style', 'pushbutton', ...
            'Units', 'characters', ...
            'Position', ppinv.*[32 1.5 15 1.5], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', 'Update Response', ...
            'Callback', @updateresponse_Callback);
        
        handles.plotedpmaf = uicontrol( ...
            'Parent', handles.OUTPUTS2, ...
            'Tag', 'plotedpmaf', ...
            'Style', 'pushbutton', ...
            'Units', 'characters', ...
            'Position', ppinv.*[32 7.5 15 1.5], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', 'Plot MAF(edp)', ...
            'Callback', @plotedpmaf_Callback);
        
        handles.plotedppdf = uicontrol( ...
            'Parent', handles.OUTPUTS2, ...
            'Tag', 'plotedppdf', ...
            'Style', 'pushbutton', ...
            'Units', 'characters', ...
            'Position', ppinv.*[32 5.5 15 1.5], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', 'Plot PDF(edp|im)', ...
            'Callback', @plotedppdf_Callback);
        
        handles.setedpim = uicontrol( ...
            'Parent', handles.OUTPUTS2, ...
            'Tag', 'setedpim', ...
            'Style', 'edit', ...
            'Units', 'characters', ...
            'Position', ppinv.*[16 5.5 15 1.5], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', 'IM value');
        
        handles.setquantities = uicontrol( ...
            'Parent', handles.INPUTS5, ...
            'Tag', 'setquantities', ...
            'Style', 'pushbutton', ...
            'Units', 'characters', ...
            'Position', ppinv.*[32 3.5 15 1.5], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', 'Set Quantities*', ...
            'Callback', @updatequantities_Callback);
        
        handles.updatelosses = uicontrol( ...
            'Parent', handles.INPUTS5, ...
            'Tag', 'updatelosses', ...
            'Style', 'pushbutton', ...
            'Units', 'characters', ...
            'Position', ppinv.*[32 1.5 15 1.5], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', 'Update Losses', ...
            'Callback', @updatelosses_Callback);
        
        handles.inputheader3 = uicontrol( ...
            'Parent', handles.INPUTS3, ...
            'Tag', 'inputheader3', ...
            'Style', 'text', ...
            'Units', 'characters', ...
            'Position', ppinv.*[2 18 35 1], ...
            'FontName', 'Helvetica', ...
            'FontSize', 11, ...
            'FontWeight', 'bold', ...
            'BackgroundColor', [1 1 1], ...
            'String', 'COLLAPSE RISK OUTPUTS:', ...
            'HorizontalAlignment', 'left');
        
        handles.updatecollapse = uicontrol( ...
            'Parent', handles.INPUTS3, ...
            'Tag', 'updatecollapse', ...
            'Style', 'pushbutton', ...
            'Units', 'characters', ...
            'Position', ppinv.*[32 1.5 15 1.5], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', 'Update Collapse', ...
            'Callback', @updatecollapse_Callback);
        
        handles.collapse2 = uicontrol( ...
            'Parent', handles.INPUTS3, ...
            'Tag', 'collapse2', ...
            'Style', 'text', ...
            'Units', 'characters', ...
            'Position', ppinv.*[2 11.25 25 1], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', 'MAF of Collapse:', ...
            'HorizontalAlignment', 'left');
        
        handles.collapse3 = uicontrol( ...
            'Parent', handles.INPUTS3, ...
            'Tag', 'collapse3', ...
            'Style', 'text', ...
            'Units', 'characters', ...
            'Position', ppinv.*[2 9.4 25 1], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', 'p(Collapse) in 50yr:', ...
            'HorizontalAlignment', 'left');
        
        handles.mafc = uicontrol( ...
            'Parent', handles.INPUTS3, ...
            'Tag', 'mafc', ...
            'Style', 'edit', ...
            'Units', 'characters', ...
            'Position', ppinv.*[20 11 10 1.5], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [0.8 0.8 0.8], ...
            'Enable', 'off', ...
            'String', 'n/a');
        
        handles.pc50 = uicontrol( ...
            'Parent', handles.INPUTS3, ...
            'Tag', 'pc50', ...
            'Style', 'edit', ...
            'Units', 'characters', ...
            'Position', ppinv.*[20 9.15 10 1.5], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [0.8 0.8 0.8], ...
            'Enable', 'off', ...
            'String', 'n/a');
        
        handles.fragilitydir = uicontrol( ...
            'Parent', handles.INPUTS4, ...
            'Tag', 'fragilitydir', ...
            'Style', 'edit', ...
            'Units', 'characters', ...
            'HorizontalAlignment', 'left', ...
            'Position', ppinv.*[2 15.3 30 2], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'FontAngle', 'oblique', ...
            'ForegroundColor', [0.5 0.5 0.5], ...
            'BackgroundColor', [1 1 1], ...
            'String', 'Open file...');
        
        handles.openfragility = uicontrol( ...
            'Parent', handles.INPUTS4, ...
            'Tag', 'openfragility', ...
            'Style', 'pushbutton', ...
            'Units', 'characters', ...
            'HorizontalAlignment', 'left', ...
            'Position', ppinv.*[33 15.6 10 1.5], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', 'Open', ...
            'Callback', @openfragility_Callback);
        
        handles.inputheader4 = uicontrol( ...
            'Parent', handles.INPUTS4, ...
            'Tag', 'inputheader4', ...
            'Style', 'text', ...
            'Units', 'characters', ...
            'Position', ppinv.*[2 18 35 1], ...
            'FontName', 'Helvetica', ...
            'FontSize', 11, ...
            'FontWeight', 'bold', ...
            'BackgroundColor', [1 1 1], ...
            'String', 'COMPONENT INPUTS:', ...
            'HorizontalAlignment', 'left');
        
        handles.fragility2 = uicontrol( ...
            'Parent', handles.INPUTS4, ...
            'Tag', 'fragility2', ...
            'Style', 'text', ...
            'Units', 'characters', ...
            'Position', ppinv.*[2 11.25 24 1], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', 'Number of fragility curves:', ...
            'HorizontalAlignment', 'left');
        
        handles.fragility3 = uicontrol( ...
            'Parent', handles.INPUTS4, ...
            'Tag', 'fragility3', ...
            'Style', 'text', ...
            'Units', 'characters', ...
            'Position', ppinv.*[2 9.4 24 1], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', 'Number of damage states:', ...
            'HorizontalAlignment', 'left');
        
        handles.nfragility = uicontrol( ...
            'Parent', handles.INPUTS4, ...
            'Tag', 'nfragility', ...
            'Style', 'edit', ...
            'Units', 'characters', ...
            'Position', ppinv.*[25 11 10 1.5], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', '2');
        
        handles.nds = uicontrol( ...
            'Parent', handles.INPUTS4, ...
            'Tag', 'nds', ...
            'Style', 'edit', ...
            'Units', 'characters', ...
            'Position', ppinv.*[25 9.15 10 1.5], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', '3');
        
        handles.updatefragility = uicontrol( ...
            'Parent', handles.INPUTS4, ...
            'Tag', 'updatefragility', ...
            'Style', 'pushbutton', ...
            'Units', 'characters', ...
            'Position', ppinv.*[32 1.5 15 1.5], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', 'Update Fragility', ...
            'Callback', @updatefragility_Callback);
        
        
        
        % --- AXES -------------------------------------
        handles.MAINAXES = axes( ...
            'Parent', handles.MAINWINDOW, ...
            'Tag', 'MAINAXES', ...
            'Units', 'characters', ...
            'Visible', 'off', ...
            'Position', ppinv.*[8 21 110 18]);
        
        handles.SMALLAXES = axes( ...
            'Parent', handles.MAINWINDOW, ...
            'Tag', 'SMALLAXES', ...
            'Units', 'characters', ...
            'Visible', 'off', ...
            'Position', ppinv.*[8 2.5 53 15]);
        
        handles.MAINAXES2 = axes( ...
            'Parent', handles.MAINWINDOW2, ...
            'Tag', 'MAINAXES2', ...
            'Units', 'characters', ...
            'Visible', 'off', ...
            'Position', ppinv.*[8 21 110 18]);
        
        handles.SMALLAXES2 = axes( ...
            'Parent', handles.MAINWINDOW2, ...
            'Tag', 'SMALLAXES2', ...
            'Units', 'characters', ...
            'Visible', 'off', ...
            'Position', ppinv.*[8 2.5 53 15]);
        
        handles.MAINAXES3 = axes( ...
            'Parent', handles.MAINWINDOW3, ...
            'Tag', 'MAINAXES3', ...
            'Units', 'characters', ...
            'Visible', 'off', ...
            'Position', ppinv.*[8 21 110 18]);
        
        handles.SMALLAXES3 = axes( ...
            'Parent', handles.MAINWINDOW3, ...
            'Tag', 'SMALLAXES3', ...
            'Units', 'characters', ...
            'Visible', 'off', ...
            'Position', ppinv.*[8 2.5 53 15]);
        
        handles.MAINAXES4 = axes( ...
            'Parent', handles.MAINWINDOW4, ...
            'Tag', 'MAINAXES4', ...
            'Units', 'characters', ...
            'Visible', 'off', ...
            'Position', ppinv.*[8 21 110 18]);
        
        handles.SMALLAXES4 = axes( ...
            'Parent', handles.MAINWINDOW4, ...
            'Tag', 'SMALLAXES4', ...
            'Units', 'characters', ...
            'Visible', 'off', ...
            'Position', ppinv.*[8 2.5 53 15]);
        
        handles.MAINAXES5 = axes( ...
            'Parent', handles.MAINWINDOW5, ...
            'Tag', 'MAINAXES5', ...
            'Units', 'characters', ...
            'Visible', 'off', ...
            'Position', ppinv.*[8 21 110 18]);
        
        handles.SMALLAXES5 = axes( ...
            'Parent', handles.MAINWINDOW5, ...
            'Tag', 'SMALLAXES5', ...
            'Units', 'characters', ...
            'Visible', 'off', ...
            'Position', ppinv.*[8 2.5 53 15]);
        
        % --- STATIC TEXTS -------------------------------------
        handles.maintitle = uicontrol( ...
            'Parent', handles.TITLEBAR, ...
            'Tag', 'maintitle', ...
            'Style', 'text', ...
            'Units', 'characters', ...
            'Position', ppinv.*[0 1 180 3], ...
            'FontName', 'Helvetica', ...
            'FontSize', 18, ...
            'FontWeight', 'bold', ...
            'BackgroundColor', [1 1 1], ...
            'String', 'SEISMIC PERFORMANCE ASSESSMENT TOOL');
        
        handles.subtitle = uicontrol( ...
            'Parent', handles.TITLEBAR, ...
            'Tag', 'subtitle', ...
            'Style', 'text', ...
            'Units', 'characters', ...
            'Position', ppinv.*[0 0 180 2], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', 'Created by Nicole Paul for CEE 385, Fall 2015 at Stanford University');
        
        handles.inputheader = uicontrol( ...
            'Parent', handles.INPUTS, ...
            'Tag', 'inputheader', ...
            'Style', 'text', ...
            'Units', 'characters', ...
            'Position', ppinv.*[2 18 35 1], ...
            'FontName', 'Helvetica', ...
            'FontSize', 11, ...
            'FontWeight', 'bold', ...
            'BackgroundColor', [1 1 1], ...
            'String', 'SEISMIC HAZARD INPUTS:', ...
            'HorizontalAlignment', 'left');
        
        handles.hazard1 = uicontrol( ...
            'Parent', handles.INPUTS, ...
            'Tag', 'hazard1', ...
            'Style', 'text', ...
            'Units', 'characters', ...
            'Position', ppinv.*[2 13 10 1], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', 'Latitude:', ...
            'HorizontalAlignment', 'left');
        
        handles.hazard2 = uicontrol( ...
            'Parent', handles.INPUTS, ...
            'Tag', 'hazard2', ...
            'Style', 'text', ...
            'Units', 'characters', ...
            'Position', ppinv.*[2 11.25 10 1], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', 'Longitude:', ...
            'HorizontalAlignment', 'left');
        
        handles.hazard3 = uicontrol( ...
            'Parent', handles.INPUTS, ...
            'Tag', 'hazard3', ...
            'Style', 'text', ...
            'Units', 'characters', ...
            'Position', ppinv.*[2 9.4 10 1], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', 'Site Class:', ...
            'HorizontalAlignment', 'left');
        
        handles.hazard4 = uicontrol( ...
            'Parent', handles.INPUTS, ...
            'Tag', 'hazard4', ...
            'Style', 'text', ...
            'Units', 'characters', ...
            'Position', ppinv.*[2 7.6 10 1], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', 'Period:', ...
            'HorizontalAlignment', 'left');
        
        handles.outhazard1 = uicontrol( ...
            'Parent', handles.OUTPUTS, ...
            'Tag', 'outhazard1', ...
            'Style', 'text', ...
            'Units', 'characters', ...
            'Position', ppinv.*[2 13 10 1], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', 'Probability:', ...
            'HorizontalAlignment', 'left');
        
        handles.outhazard2 = uicontrol( ...
            'Parent', handles.OUTPUTS, ...
            'Tag', 'outhazard2', ...
            'Style', 'text', ...
            'Units', 'characters', ...
            'Position', ppinv.*[2 11.25 10 1], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', 'Time:', ...
            'HorizontalAlignment', 'left');
        
        handles.outhazard3 = uicontrol( ...
            'Parent', handles.OUTPUTS, ...
            'Tag', 'outhazard3', ...
            'Style', 'text', ...
            'Units', 'characters', ...
            'Position', ppinv.*[2 9.4 10 1], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', 'Rate:', ...
            'HorizontalAlignment', 'left');
        
        handles.outhazard4 = uicontrol( ...
            'Parent', handles.OUTPUTS, ...
            'Tag', 'outhazard4', ...
            'Style', 'text', ...
            'Units', 'characters', ...
            'Position', ppinv.*[2 7.6 10 1], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', 'IM Value:', ...
            'HorizontalAlignment', 'left');
        
        handles.outloss1 = uicontrol( ...
            'Parent', handles.OUTPUTS5, ...
            'Tag', 'outloss1', ...
            'Style', 'text', ...
            'Units', 'characters', ...
            'Position', ppinv.*[2 13 10 1], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', 'IM Value:', ...
            'HorizontalAlignment', 'left');
        
        handles.outloss2 = uicontrol( ...
            'Parent', handles.OUTPUTS5, ...
            'Tag', 'outloss2', ...
            'Style', 'text', ...
            'Units', 'characters', ...
            'Position', ppinv.*[2 11.25 40 1], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', 'E[L|IM]:', ...
            'HorizontalAlignment', 'left');
        
        handles.outloss3 = uicontrol( ...
            'Parent', handles.OUTPUTS5, ...
            'Tag', 'outloss3', ...
            'Style', 'text', ...
            'Units', 'characters', ...
            'Position', ppinv.*[5 9.4 40 1], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', ' ', ...
            'HorizontalAlignment', 'left');
        
        handles.outloss4 = uicontrol( ...
            'Parent', handles.OUTPUTS5, ...
            'Tag', 'outloss4', ...
            'Style', 'text', ...
            'Units', 'characters', ...
            'Position', ppinv.*[2 7.6 40 1], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', 'AAL:', ...
            'HorizontalAlignment', 'left');
        
        handles.outloss5 = uicontrol( ...
            'Parent', handles.OUTPUTS5, ...
            'Tag', 'outloss5', ...
            'Style', 'text', ...
            'Units', 'characters', ...
            'Position', ppinv.*[5 5.8 40 1], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', 'x           x           x', ...
            'HorizontalAlignment', 'left');
        
        handles.outloss6 = uicontrol( ...
            'Parent', handles.OUTPUTS5, ...
            'Tag', 'outloss6', ...
            'Style', 'text', ...
            'Units', 'characters', ...
            'Position', ppinv.*[5 4 40 1], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', 'x           x           x', ...
            'HorizontalAlignment', 'left');
        
        handles.outputheader = uicontrol( ...
            'Parent', handles.OUTPUTS, ...
            'Tag', 'outputheader', ...
            'UserData', zeros(1,0), ...
            'Visible', 'off', ...
            'Style', 'text', ...
            'Units', 'characters', ...
            'Position', ppinv.*[2 17 35 1], ...
            'FontName', 'Helvetica', ...
            'FontSize', 11, ...
            'FontWeight', 'bold', ...
            'BackgroundColor', [1 1 1], ...
            'String', 'SEISMIC HAZARD OUTPUTS:', ...
            'HorizontalAlignment', 'left');
                
        handles.outputheader4 = uicontrol( ...
            'Parent', handles.OUTPUTS4, ...
            'Tag', 'outputheader4', ...
            'UserData', zeros(1,0), ...
            'Visible', 'on', ...
            'Style', 'text', ...
            'Units', 'characters', ...
            'Position', ppinv.*[2 17 35 1], ...
            'FontName', 'Helvetica', ...
            'FontSize', 11, ...
            'FontWeight', 'bold', ...
            'BackgroundColor', [1 1 1], ...
            'String', 'DEMOLITION INPUTS:', ...
            'HorizontalAlignment', 'left');
        
        handles.demolition1 = uicontrol( ...
            'Parent', handles.OUTPUTS4, ...
            'Tag', 'hazard1', ...
            'Style', 'text', ...
            'Units', 'characters', ...
            'Position', ppinv.*[2 13 10 1], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', 'Median RIDR:', ...
            'HorizontalAlignment', 'left');
        
        handles.demolition2 = uicontrol( ...
            'Parent', handles.OUTPUTS4, ...
            'Tag', 'hazard2', ...
            'Style', 'text', ...
            'Units', 'characters', ...
            'Position', ppinv.*[2 11.25 10 1], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', 'Dispersion:', ...
            'HorizontalAlignment', 'left');
        
        handles.inputheader5 = uicontrol( ...
            'Parent', handles.INPUTS5, ...
            'Tag', 'inputheader5', ...
            'Style', 'text', ...
            'Units', 'characters', ...
            'Position', ppinv.*[2 18 35 1], ...
            'FontName', 'Helvetica', ...
            'FontSize', 11, ...
            'FontWeight', 'bold', ...
            'BackgroundColor', [1 1 1], ...
            'String', 'LOSS INPUTS:', ...
            'HorizontalAlignment', 'left');
        
        handles.loss1 = uicontrol( ...
            'Parent', handles.INPUTS5, ...
            'Tag', 'loss1', ...
            'Style', 'text', ...
            'Units', 'characters', ...
            'Position', ppinv.*[2 13 30 1], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', 'Replacement Cost New:', ...
            'HorizontalAlignment', 'left');
        
        handles.loss2 = uicontrol( ...
            'Parent', handles.INPUTS5, ...
            'Tag', 'loss2', ...
            'Style', 'text', ...
            'Units', 'characters', ...
            'Position', ppinv.*[2 11.25 30 1], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', 'Demolition Cost:', ...
            'HorizontalAlignment', 'left');
        
        handles.loss3 = uicontrol( ...
            'Parent', handles.INPUTS5, ...
            'Tag', 'loss3', ...
            'Style', 'text', ...
            'Units', 'characters', ...
            'Position', ppinv.*[2 9.4 30 1], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', 'Collapse Cost:', ...
            'HorizontalAlignment', 'left');
        
        % --- PUSHBUTTONS -------------------------------------
        handles.HAZARD = uicontrol( ...
            'Parent', handles.SELECTBAR, ...
            'Tag', 'HAZARD', ...
            'Style', 'pushbutton', ...
            'Units', 'characters', ...
            'Position', ppinv.*[20 1 15 1.5], ...
            'FontName', 'Helvetica', ...
            'FontSize', 11, ...
            'FontWeight', 'bold', ...
            'BackgroundColor', [1 1 1], ...
            'String', 'HAZARD', ...
            'Callback', @HAZARD_Callback);
        
        handles.RESPONSE = uicontrol( ...
            'Parent', handles.SELECTBAR, ...
            'Tag', 'RESPONSE', ...
            'Style', 'pushbutton', ...
            'Units', 'characters', ...
            'Position', ppinv.*[50 1 15 1.5], ...
            'FontName', 'Helvetica', ...
            'FontSize', 11, ...
            'FontWeight', 'bold', ...
            'BackgroundColor', [1 1 1], ...
            'String', 'RESPONSE', ...
            'Callback', @RESPONSE_Callback);
        
        handles.COLLAPSE = uicontrol( ...
            'Parent', handles.SELECTBAR, ...
            'Tag', 'COLLAPSE', ...
            'Style', 'pushbutton', ...
            'Units', 'characters', ...
            'Position', ppinv.*[80 1 15 1.5], ...
            'FontName', 'Helvetica', ...
            'FontSize', 11, ...
            'FontWeight', 'bold', ...
            'BackgroundColor', [1 1 1], ...
            'String', 'COLLAPSE', ...
            'Callback', @COLLAPSE_Callback);
        
        handles.DAMAGE = uicontrol( ...
            'Parent', handles.SELECTBAR, ...
            'Tag', 'DAMAGE', ...
            'Style', 'pushbutton', ...
            'Units', 'characters', ...
            'Position', ppinv.*[110 1 15 1.5], ...
            'FontName', 'Helvetica', ...
            'FontSize', 11, ...
            'FontWeight', 'bold', ...
            'BackgroundColor', [1 1 1], ...
            'String', 'DAMAGE', ...
            'Callback', @DAMAGE_Callback);
        
        handles.LOSS = uicontrol( ...
            'Parent', handles.SELECTBAR, ...
            'Tag', 'LOSS', ...
            'Style', 'pushbutton', ...
            'Units', 'characters', ...
            'Position', ppinv.*[140 1 15 1.5], ...
            'FontName', 'Helvetica', ...
            'FontSize', 11, ...
            'FontWeight', 'bold', ...
            'BackgroundColor', [1 1 1], ...
            'String', 'LOSS', ...
            'Callback', @LOSS_Callback);
        
        handles.updatehazard = uicontrol( ...
            'Parent', handles.INPUTS, ...
            'Tag', 'updatehazard', ...
            'Style', 'pushbutton', ...
            'Units', 'characters', ...
            'Position', ppinv.*[32 1.5 15 1.5], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', 'Update Hazard', ...
            'Callback', @updatehazard_Callback);
        
        handles.exportdata = uicontrol( ...
            'Parent', handles.PLOTOPTIONS, ...
            'Tag', 'exportdata', ...
            'Style', 'pushbutton', ...
            'Units', 'characters', ...
            'Position', ppinv.*[3 11.8 15 1.5], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', 'Export Data', ...
            'Callback', @exportdata_Callback);
        
        % --- CHECKBOXES -------------------------------------
        handles.gridon = uicontrol( ...
            'Parent', handles.PLOTOPTIONS, ...
            'Tag', 'gridon', ...
            'Style', 'checkbox', ...
            'Units', 'characters', ...
            'Position', ppinv.*[3 9.2 15 1.5], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'Value', 1, ...
            'BackgroundColor', [1 1 1], ...
            'String', 'Grid On', ...
            'Callback', @gridon_Callback);
        
        
        handles.logy = uicontrol( ...
            'Parent', handles.PLOTOPTIONS, ...
            'Tag', 'logy', ...
            'Style', 'checkbox', ...
            'Units', 'characters', ...
            'Position', ppinv.*[3 7.3 15 1.5], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'Value', 1, ...
            'BackgroundColor', [1 1 1], ...
            'String', 'Log (y-axis)', ...
            'Callback', @logy_Callback);
        
        handles.pickedp = uicontrol( ...
            'Parent', handles.PLOTOPTIONS2, ...
            'Tag', 'pickcomp', ...
            'Style', 'popupmenu', ...
            'Units', 'characters', ...
            'Position', ppinv.*[3 7.3 15 1.5], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'Value', 1, ...
            'BackgroundColor', [1 1 1], ...
            'String', handles.edptext, ...
            'Callback', @pickedp_Callback);
        
        handles.pickcomp = uicontrol( ...
            'Parent', handles.PLOTOPTIONS4, ...
            'Tag', 'pickedp', ...
            'Style', 'popupmenu', ...
            'Units', 'characters', ...
            'Position', ppinv.*[3 7.3 15 1.5], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'Value', 1, ...
            'BackgroundColor', [1 1 1], ...
            'String', handles.compnames, ...
            'Callback', @pickcomp_Callback);
        
        handles.logx = uicontrol( ...
            'Parent', handles.PLOTOPTIONS, ...
            'Tag', 'logx', ...
            'Style', 'checkbox', ...
            'Units', 'characters', ...
            'Position', ppinv.*[3 5.5 15 1.5], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'Value', 1, ...
            'BackgroundColor', [1 1 1], ...
            'String', 'Log (x-axis)', ...
            'Callback', @logx_Callback);
        
%         handles.fitpoly = uicontrol( ...
%             'Parent', handles.PLOTOPTIONS, ...
%             'Tag', 'fitpoly', ...
%             'Style', 'checkbox', ...
%             'Units', 'characters', ...
%             'Position', ppinv.*[3 3.7 15 1.5], ...
%             'FontName', 'Helvetica', ...
%             'FontSize', 10, ...
%             'BackgroundColor', [1 1 1], ...
%             'String', 'Fit Polynomial', ...
%             'Callback', @fitpoly_Callback);
        
        % --- EDIT TEXTS -------------------------------------
        handles.latitude = uicontrol( ...
            'Parent', handles.INPUTS, ...
            'Tag', 'latitude', ...
            'Style', 'edit', ...
            'Units', 'characters', ...
            'Position', ppinv.*[13 12.75 10 1.5], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', '37.785');
        
        handles.longitude = uicontrol( ...
            'Parent', handles.INPUTS, ...
            'Tag', 'longitude', ...
            'Style', 'edit', ...
            'Units', 'characters', ...
            'Position', ppinv.*[13 11 10 1.5], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', '-122.440');
        
        handles.pexceed = uicontrol( ...
            'Parent', handles.OUTPUTS, ...
            'Tag', 'pexceed', ...
            'Style', 'edit', ...
            'Units', 'characters', ...
            'Position', ppinv.*[13 12.75 10 1.5], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'Callback', @interpHazard_Callback, ...
            'String', '0.02');
        
        handles.imloss = uicontrol( ...
            'Parent', handles.OUTPUTS5, ...
            'Tag', 'imloss', ...
            'Style', 'edit', ...
            'Units', 'characters', ...
            'Position', ppinv.*[13 12.75 10 1.5], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'Callback', @imLoss_Callback, ...
            'String', ' ');
        
        handles.texceed = uicontrol( ...
            'Parent', handles.OUTPUTS, ...
            'Tag', 'texceed', ...
            'Style', 'edit', ...
            'Units', 'characters', ...
            'Position', ppinv.*[13 11 10 1.5], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'Callback', @interpHazard_Callback, ...
            'String', '50');
        
        handles.nuexceed = uicontrol( ...
            'Parent', handles.OUTPUTS, ...
            'Tag', 'nuexceed', ...
            'Style', 'edit', ...
            'Units', 'characters', ...
            'Position', ppinv.*[13 9.25 10 1.5], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [0.8 0.8 0.8], ...
            'Enable', 'off', ...
            'String', ' ');
        
        handles.imexceed = uicontrol( ...
            'Parent', handles.OUTPUTS, ...
            'Tag', 'imexceed', ...
            'Style', 'edit', ...
            'Units', 'characters', ...
            'Position', ppinv.*[13 7.5 10 1.5], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [0.8 0.8 0.8], ...
            'Enable', 'off', ...
            'String', ' ');
        
        handles.demotheta = uicontrol( ...
            'Parent', handles.OUTPUTS4, ...
            'Tag', 'demotheta', ...
            'Style', 'edit', ...
            'Units', 'characters', ...
            'Position', ppinv.*[13 12.75 10 1.5], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', '0.015');
        
        handles.demobeta = uicontrol( ...
            'Parent', handles.OUTPUTS4, ...
            'Tag', 'demobeta', ...
            'Style', 'edit', ...
            'Units', 'characters', ...
            'Position', ppinv.*[13 11 10 1.5], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', '0.3');
        
        handles.rcn = uicontrol( ...
            'Parent', handles.INPUTS5, ...
            'Tag', 'rcn', ...
            'Style', 'edit', ...
            'Units', 'characters', ...
            'Position', ppinv.*[25 12.75 15 1.5], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', '2000000');
        
        handles.democost = uicontrol( ...
            'Parent', handles.INPUTS5, ...
            'Tag', 'democost', ...
            'Style', 'edit', ...
            'Units', 'characters', ...
            'Position', ppinv.*[25 11 15 1.5], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', '2500000');
        
        handles.colcost = uicontrol( ...
            'Parent', handles.INPUTS5, ...
            'Tag', 'colcost', ...
            'Style', 'edit', ...
            'Units', 'characters', ...
            'Position', ppinv.*[25 9.25 15 1.5], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', '2600000');
        
        % --- POPUP MENU -------------------------------------
        handles.shcsource = uicontrol( ...
            'Parent', handles.INPUTS, ...
            'Tag', 'shcsource', ...
            'Style', 'popupmenu', ...
            'Units', 'characters', ...
            'Position', ppinv.*[2 15.3 30 2], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', {'Import from USGS'});
        
        handles.edpinterp = uicontrol( ...
            'Parent', handles.OUTPUTS2, ...
            'Tag', 'edpinterp', ...
            'Style', 'popupmenu', ...
            'Units', 'characters', ...
            'Position', ppinv.*[2 15.3 30 2], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', {'Linear interp. / Plateau extrap.'});
        
        handles.collapsefit = uicontrol( ...
            'Parent', handles.INPUTS3, ...
            'Tag', 'collapsefit', ...
            'Style', 'popupmenu', ...
            'Units', 'characters', ...
            'Position', ppinv.*[2 15.3 30 2], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', {'MLE','Least Squares'});
        
        handles.siteclass = uicontrol( ...
            'Parent', handles.INPUTS, ...
            'Tag', 'siteclass', ...
            'Style', 'popupmenu', ...
            'Units', 'characters', ...
            'Position', ppinv.*[13 9.25 22 1.5], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', {'A     (2000 m/s)','B     (1150 m/s)','B/C  (760 m/s)','C     (537 m/s)','C/D  (360 m/s)','D     (259 m/s)','D/E  (180 m/s)'}, ...
            'Value', 6);
        
        handles.siteperiod = uicontrol( ...
            'Parent', handles.INPUTS, ...
            'Tag', 'siteperiod', ...
            'Style', 'popupmenu', ...
            'Units', 'characters', ...
            'Position', ppinv.*[13 7.25 22 1.5], ...
            'FontName', 'Helvetica', ...
            'FontSize', 10, ...
            'BackgroundColor', [1 1 1], ...
            'String', {'PGA','0.1s    (10 Hz)','0.2s    (5 Hz)','0.3s    (3.3 Hz)','0.5s    (2 Hz)','0.75s  (1.3 Hz)','1.0s    (1 Hz)','2.0s    (0.5 Hz)','3.0s    (0.3 Hz)','4.0s    (0.25 Hz)','5.0s    (0.2 Hz)'});
        
        
    end

%% ---------------------------------------------------------------------------
    function HAZARD_Callback(hObject,evendata) %#ok<INUSD>
        
        % Hiding previous windows
        set(handles.INPUTS2, 'Visible', 'off');
        set(handles.MAINWINDOW2, 'Visible', 'off');
        set(handles.PLOTOPTIONS2, 'Visible', 'off');
        set(handles.OUTPUTS2, 'Visible', 'off');
        set(handles.INPUTS3, 'Visible', 'off');
        set(handles.MAINWINDOW3, 'Visible', 'off');
        set(handles.PLOTOPTIONS3, 'Visible', 'off');
        set(handles.OUTPUTS3, 'Visible', 'off');
        set(handles.INPUTS4, 'Visible', 'off');
        set(handles.MAINWINDOW4, 'Visible', 'off');
        set(handles.PLOTOPTIONS4, 'Visible', 'off');
        set(handles.OUTPUTS4, 'Visible', 'off');
        set(handles.INPUTS5, 'Visible', 'off');
        set(handles.MAINWINDOW5, 'Visible', 'off');
        set(handles.PLOTOPTIONS5, 'Visible', 'off');
        set(handles.OUTPUTS5, 'Visible', 'off');
        
        % Showing hazard windows windows
        set(handles.INPUTS, 'Visible', 'on');
        set(handles.MAINWINDOW, 'Visible', 'on');
        set(handles.PLOTOPTIONS, 'Visible', 'on');
        set(handles.OUTPUTS, 'Visible', 'on');
        
    end

%% ---------------------------------------------------------------------------
    function RESPONSE_Callback(hObject,evendata) %#ok<INUSD>
        
        % Hiding previous windows
        set(handles.OUTPUTS, 'Visible', 'off');
        set(handles.OUTPUTS4, 'Visible', 'off');
        set(handles.INPUTS, 'Visible', 'off');
        set(handles.MAINWINDOW, 'Visible', 'off');
        set(handles.PLOTOPTIONS, 'Visible', 'off');
        set(handles.INPUTS3, 'Visible', 'off');
        set(handles.MAINWINDOW3, 'Visible', 'off');
        set(handles.PLOTOPTIONS3, 'Visible', 'off');
        set(handles.OUTPUTS3, 'Visible', 'off');
        set(handles.INPUTS4, 'Visible', 'off');
        set(handles.MAINWINDOW4, 'Visible', 'off');
        set(handles.PLOTOPTIONS4, 'Visible', 'off');
        set(handles.OUTPUTS4, 'Visible', 'off');
        set(handles.INPUTS5, 'Visible', 'off');
        set(handles.MAINWINDOW5, 'Visible', 'off');
        set(handles.PLOTOPTIONS5, 'Visible', 'off');
        set(handles.OUTPUTS5, 'Visible', 'off');
        
        % Showing response windows windows
        set(handles.INPUTS2, 'Visible', 'on');
        set(handles.OUTPUTS2, 'Visible', 'on');
        set(handles.MAINWINDOW2, 'Visible', 'on');
        set(handles.PLOTOPTIONS2, 'Visible', 'on');
        
    end

%% ---------------------------------------------------------------------------
    function COLLAPSE_Callback(hObject,evendata) %#ok<INUSD>
        
        % Hiding previous windows
        set(handles.INPUTS, 'Visible', 'off');
        set(handles.OUTPUTS, 'Visible', 'off');
        set(handles.OUTPUTS4, 'Visible', 'off');
        set(handles.MAINWINDOW, 'Visible', 'off');
        set(handles.PLOTOPTIONS, 'Visible', 'off');
        set(handles.INPUTS2, 'Visible', 'off');
        set(handles.MAINWINDOW2, 'Visible', 'off');
        set(handles.OUTPUTS2, 'Visible', 'off');
        set(handles.PLOTOPTIONS2, 'Visible', 'off');
        set(handles.INPUTS4, 'Visible', 'off');
        set(handles.MAINWINDOW4, 'Visible', 'off');
        set(handles.PLOTOPTIONS4, 'Visible', 'off');
        set(handles.OUTPUTS4, 'Visible', 'off');
        set(handles.INPUTS5, 'Visible', 'off');
        set(handles.MAINWINDOW5, 'Visible', 'off');
        set(handles.PLOTOPTIONS5, 'Visible', 'off');
        set(handles.OUTPUTS5, 'Visible', 'off');
        
        % Showing response windows windows
        set(handles.INPUTS3, 'Visible', 'on');
        set(handles.MAINWINDOW3, 'Visible', 'on');
        set(handles.PLOTOPTIONS3, 'Visible', 'on');
        set(handles.OUTPUTS3, 'Visible', 'on');
        
    end

%% ---------------------------------------------------------------------------
    function DAMAGE_Callback(hObject,evendata) %#ok<INUSD>
        
        % Hiding previous windows
        set(handles.INPUTS, 'Visible', 'off');
        set(handles.OUTPUTS, 'Visible', 'off');
        set(handles.MAINWINDOW, 'Visible', 'off');
        set(handles.PLOTOPTIONS, 'Visible', 'off');
        set(handles.INPUTS2, 'Visible', 'off');
        set(handles.OUTPUTS2, 'Visible', 'off');
        set(handles.MAINWINDOW2, 'Visible', 'off');
        set(handles.PLOTOPTIONS2, 'Visible', 'off');
        set(handles.INPUTS3, 'Visible', 'off');
        set(handles.MAINWINDOW3, 'Visible', 'off');
        set(handles.PLOTOPTIONS3, 'Visible', 'off');
        set(handles.INPUTS5, 'Visible', 'off');
        set(handles.MAINWINDOW5, 'Visible', 'off');
        set(handles.PLOTOPTIONS5, 'Visible', 'off');
        set(handles.OUTPUTS5, 'Visible', 'off');
        
        % Showing response windows windows
        set(handles.INPUTS4, 'Visible', 'on');
        set(handles.MAINWINDOW4, 'Visible', 'on');
        set(handles.PLOTOPTIONS4, 'Visible', 'on');
        set(handles.OUTPUTS4, 'Visible', 'on');
        
    end

%% ---------------------------------------------------------------------------
    function LOSS_Callback(hObject,evendata) %#ok<INUSD>
        
        % Hiding previous windows
        set(handles.OUTPUTS, 'Visible', 'off');
        set(handles.OUTPUTS4, 'Visible', 'off');
        set(handles.INPUTS, 'Visible', 'off');
        set(handles.MAINWINDOW, 'Visible', 'off');
        set(handles.PLOTOPTIONS, 'Visible', 'off');
        set(handles.INPUTS2, 'Visible', 'off');
        set(handles.OUTPUTS2, 'Visible', 'off');
        set(handles.MAINWINDOW2, 'Visible', 'off');
        set(handles.PLOTOPTIONS2, 'Visible', 'off');
        set(handles.INPUTS3, 'Visible', 'off');
        set(handles.MAINWINDOW3, 'Visible', 'off');
        set(handles.PLOTOPTIONS3, 'Visible', 'off');
        set(handles.INPUTS4, 'Visible', 'off');
        set(handles.MAINWINDOW4, 'Visible', 'off');
        set(handles.PLOTOPTIONS4, 'Visible', 'off');
        
        % Showing response windows windows
        set(handles.INPUTS5, 'Visible', 'on');
        set(handles.MAINWINDOW5, 'Visible', 'on');
        set(handles.PLOTOPTIONS5, 'Visible', 'on');
        set(handles.OUTPUTS5, 'Visible', 'on');
        
    end

%% ---------------------------------------------------------------------------
    function updatehazard_Callback(hObject,evendata) %#ok<INUSD>
        
        % Accessing inputs
        lat = get(handles.latitude, 'str');
        long = get(handles.longitude, 'str');
        siteclass = get(handles.siteclass, 'Value');
        siteper = get(handles.siteperiod, 'Value');
        
        % Calling function to read and import SHC data from USGS
        shcdat = get_usgsHazard(lat, long, siteclass, siteper);
        
        % Plotting SHC in mainaxes
        set(handles.MAINWINDOW, 'Visible', 'on');
        set(handles.MAINAXES, 'Visible', 'on');
        h = handles.MAINAXES;
        cla(h,'reset');
        plot(h, shcdat(:,1), shcdat(:,2), '*:', 'Linewidth', 1.2, 'DisplayName', 'USGS');
        xlabel(h, 'Ground Motion [g]');
        ylabel(h, 'Annual Frequency of Exceedance');
        title(h, strcat('Seismic Hazard Curve: Lat=',lat,' & ','Lon=',long));
        legend(h, '-dynamicLegend', 'Location', 'best');
        
        % Fit polynomial
        % Fit polynomial to data
        h = handles.MAINAXES;
        hold(h,'all');
        % By default use 4th order polynomial, and only fit for values
        % less than 2.0g
        ndeg = 4;
        inds = find(shcdat(:,1)<2);
        pcoeff = polyfit(log(shcdat(inds,1)), log(shcdat(inds,2)), ndeg);
        
        % Calculate at same points of hazard curve
        gm_ofint = linspace(min(shcdat(:,1)),max(shcdat(:,1)),100);
        ypoly = exp(polyval(pcoeff, log(gm_ofint)));
        
        % Plot polynomial
        plot(h, gm_ofint, ypoly, 'LineWidth', 1.2, 'DisplayName', strcat('Polyfit, n=', num2str(ndeg)));
        legend(h, '-dynamicLegend', 'Location', 'best');
        
        % Store pcoeff values
        handles.pcoeff = pcoeff;
        
        % Turn off holding
        hold(h,'off');
        
        
        if handles.gridon
            grid(h, 'on');
        end
        if handles.logy
            set(h, 'Yscale', 'log');
        end
        if handles.logx
            set(h, 'Xscale', 'log');
        end
        
        % Store SHC data
        handles.shcdat = shcdat;
        
        % Displaying plot options
        set(handles.PLOTOPTIONS, 'Visible', 'on');
        
        
        
    end
%% ---------------------------------------------------------------------------
    function updateresponse_Callback(hObject,evendata) %#ok<INUSD>
        
        % Accessing inputs
        nstripe = handles.nstripe;
        nfloors = str2double(get(handles.nfloors, 'str'));
        nedps = str2double(get(handles.nedps, 'str'));
        ngms = str2double(get(handles.ngms, 'str'));
        stripestr = get(handles.stripedir, 'str');
        
        % Calling function to read and import IDA data
        [imval, stripeDat, imchoice, unitstr, edptext] = get_idaResponse(stripestr, nstripe, nedps, ngms);
        
        % Plotting other ground motions behind median results
        set(handles.MAINWINDOW2, 'Visible', 'on');
        set(handles.MAINAXES2, 'Visible', 'on');
        h = handles.MAINAXES2;
        cla(h,'reset');
        hold(h,'all');
        grays = linspace(0.95,0.55,nstripe);
        for j = 1:nstripe
            plot(h, stripeDat{j}(1:nfloors,:), 1:nfloors, '-', 'LineWidth', 1, 'Color', ones(1,3).*grays(j),'HandleVisibility','off');
        end
        % Plotting median results in mainaxes
        for j = 1:nstripe
            plot(h, calc_geoMean(stripeDat{j}(1:nfloors,:),2), 1:nfloors, 'o:', 'Linewidth', 1.2, 'DisplayName', strcat(imchoice{j},'=',num2str(imval(j)),unitstr{j}));
        end
        xlabel(h, edptext{1}{1}(1:end-1));
        ylabel(h, 'Floor');
        title(h, strcat('Geomean Non-Collapse Stripe Analysis Summary: ',edptext{1}{1}(1:end-1)));
        legend(h, '-dynamicLegend', 'Location', 'best');
        ylim(h, [1 nfloors]);
        
        if handles.gridon
            grid(h, 'on');
        end
        
        
        % Plotting variability results in smallaxes
        set(handles.SMALLAXES2, 'Visible', 'on');
        h = handles.SMALLAXES2;
        cla(h,'reset');
        hold(h,'all');
        for j = 1:nfloors
            allstripedat = NaN(nstripe, ngms);
            for k = 1:nstripe
                allstripedat(k, :) = stripeDat{k}(j,:);
            end
            plot(h, imval, nanstd(log(allstripedat),[],2), 'o:', 'Linewidth', 1.2, 'DisplayName', ['Floor ' num2str(j)]);
        end
        xlabel(h, imchoice);
        ylabel(h, ['\sigma_{ln} of ' edptext{1}{1}(1:end-1)]);
        title(h, strcat('Variability Non-Collapse Stripe Analysis Summary: ',edptext{1}{1}(1:end-1)));
        legend(h, '-dynamicLegend', 'Location', 'best');
        
        if handles.gridon
            grid(h, 'on');
        end
        
        % Storing data
        handles.imval = imval;
        handles.stripeDat = stripeDat;
        handles.imchoice = imchoice{1};
        handles.unitstr = unitstr{1};
        handles.edptext = edptext{1};
        
        % Updating pickedp string
        edponly = cell(1,numel(edptext{1}));
        for i = 1:numel(edptext{1}) % NOTE: Currently assuming <10 floors
            edponly{i} = edptext{1}{i}(1:end-1);
        end
        uniqedp = unique(edponly);
        handles.uniqedp = uniqedp;
        
        uniqedp_vals = cell(1,numel(uniqedp));
        for i = 1:numel(uniqedp)
            uniqedp_vals{i} = strfind(edponly, uniqedp{i});
            for k = 1:numel(uniqedp_vals{i})
                if isempty(uniqedp_vals{i}{k})
                    uniqedp_vals{i}{k} = 0;
                end
            end
        end
        handles.uniqedp_vals = uniqedp_vals;
        
        set(handles.pickedp, 'str', uniqedp);
        
        % Displaying plot options
        set(handles.PLOTOPTIONS2, 'Visible', 'on');
        
        
        
    end

%% ---------------------------------------------------------------------------
    function updatecollapse_Callback(hObject,evendata) %#ok<INUSD>
        
        % Handling hazard inputs
        if isfield(handles,'shcdat')
            shcdat = handles.shcdat;
            im  = shcdat(:, 1);
            afe = shcdat(:, 2);
            pcoeff = handles.pcoeff;
        else
            error('Need to specify seismic hazard first');
        end
        
        % Handling response inputs
        if isfield(handles, 'stripeDat')
            stripeDat = handles.stripeDat;
            imval = handles.imval;
            ngms = str2double(get(handles.ngms, 'str'));
        else
            error('Need to specify seismic response first');
        end
        
        % Determining probability of collapse fragility
        if get(handles.collapsefit, 'Value') == 1
            fittype = 'MLE';
        else
            fittype = 'Least Squares';
        end
        [IM, pCIM, deagg, fittedFC, MAF, pc50] = get_collapseRisk(handles.pcoeff, handles.imval, handles.stripeDat, fittype, ngms);
        
        % Updating MAF, probability of collapse in 50 yr measures
        set(handles.mafc, 'str', num2str(MAF));
        set(handles.pc50, 'str', num2str(pc50));
        
        % Plotting collapse fragility curve in main axes
        set(handles.MAINAXES3, 'Visible', 'on');
        h = handles.MAINAXES3;
        cla(h,'reset');
        hold(h, 'all');
        plot(h, handles.imval, pCIM, 'o', 'DisplayName', 'Stripe Results', 'LineWidth', 1.2);
        plot(h, IM, fittedFC, '--', 'DisplayName', fittype, 'LineWidth', 1.2);
        hold(h, 'off');
        legend(h, '-dynamicLegend', 'Location', 'best');
        title(h, 'Collapse Fragility Curve');
        xlabel(h, handles.imchoice);
        ylabel(h, 'P(C|IM)');
        if handles.gridon
            grid(h, 'on');
        end
        
        % Plotting deaggregation curve in small axes
        set(handles.SMALLAXES3, 'Visible', 'on');
        h = handles.SMALLAXES3;
        cla(h,'reset');
        plot(h, IM, deagg, 'LineWidth', 1.2);
        title(h, 'Collapse Deaggregation');
        xlabel(h, handles.imchoice);
        ylabel(h, 'P(C|IM)|d\lambda _{IM} (im)/ d(im)|');
        if handles.gridon
            grid(h, 'on');
        end
        
    end

%% ---------------------------------------------------------------------------
    function updatefragility_Callback(hObject,evendata) %#ok<INUSD>
        
        % Processing inputs
        nfragility = str2double(get(handles.nfragility, 'str'));
        nds = str2double(get(handles.nds, 'str'));
        fragfile = get(handles.fragilitydir, 'str');
        
        % Get fragility and loss information
        [compnames, compedp, fragDat] = get_fragilityLoss(nfragility, nds, fragfile);
        
        % Store information
        handles.compnames = compnames;
        handles.compedp = compedp;
        handles.fragDat = fragDat;
        set(handles.pickcomp, 'str', compnames);
        
        % Plotting damage functions in main axes
        set(handles.MAINAXES4, 'Visible', 'on');
        h = handles.MAINAXES4;
        cla(h,'reset');
        hold(h, 'all');
        for i = 1:nds
            plot(h, fragDat{1}.x(:,i), fragDat{1}.p, 'LineWidth', 1.2, 'DisplayName', strcat('DS',num2str(i)));
        end
        hold(h, 'off');
        legend(h, '-dynamicLegend', 'Location', 'best');
        title(h, [compnames{1} ': Fragility Curve']);
        xlabel(h, compedp{1});
        ylabel(h, 'P(DM|EDP)');
        if handles.gridon
            grid(h, 'on');
        end
        
        
        % Plotting loss functions in small axes
        set(handles.SMALLAXES4, 'Visible', 'on');
        h = handles.SMALLAXES4;
        cla(h,'reset');
        hold(h, 'all');
        for i = 1:nds
            plot(h, fragDat{1}.c(:,i), fragDat{1}.p, 'LineWidth', 1.2, 'DisplayName', strcat('DS',num2str(i)));
        end
        hold(h, 'off');
        legend(h, '-dynamicLegend', 'Location', 'best');
        title(h, [compnames{1} ': Loss Curves']);
        xlabel(h, 'Loss');
        ylabel(h, 'P(Loss|DM)');
        if handles.gridon
            grid(h, 'on');
        end
        
    end

%% ---------------------------------------------------------------------------
    function updatequantities_Callback(hObject,evendata) %#ok<INUSD>
        
        % Processing inputs
        nfragility = str2double(get(handles.nfragility, 'str'));
        nedps = str2double(get(handles.nedps, 'str'));
        
        % Open figure with table for quantity inputs
        handles.f = figure('Position', handles.ppinv.*[100 100 752 250],'Color',[1 1 1]);
        handles.t = uitable('Parent', handles.f, 'Position', handles.ppinv.*[25 50 700 200]);
        tdata = zeros(nfragility, nedps);
        ddata = zeros(1, nedps);
        % Automatically assume that there is 1 of each component on each
        % floor
        for i = 1:nfragility
            len_edpname = numel(handles.compedp{i});
            for j = 1:nedps
                % Components
                if strcmpi(handles.edptext{j}(1:len_edpname),handles.compedp{i})
                    tdata(i,j) = 1;
                end
                % Demolition
                if strcmpi(handles.edptext{j}(1:4),'RIDR')
                    ddata(j) = 1;
                end
            end
        end
        set(handles.t,'Data',tdata,'RowName',handles.compnames,'ColumnName',handles.edptext','ColumnWidth',{50},'ColumnEditable',true);
        b = uicontrol('Parent',handles.f,'Position',handles.ppinv.*[325 10 150 20],'BackgroundColor',[1 1 1],'String','Set Quantities','Callback',@setquantity_Callback);
        
        handles.dqty = ddata;
    end

%% ---------------------------------------------------------------------------
    function updatelosses_Callback(hObject,evendata) %#ok<INUSD>
        
        % Processing inputs
        nfragility = str2double(get(handles.nfragility, 'str'));
        nfloors = str2double(get(handles.nfloors, 'str'));
        nds = str2double(get(handles.nds, 'str'));
        nedps = str2double(get(handles.nedps, 'str'));
        EC.RCN = str2double(get(handles.rcn,'str'));
        EC.D = str2double(get(handles.democost,'str'));
        EC.C = str2double(get(handles.colcost,'str'));
        
        % Demolition fragility
        dfrag{1}.theta = str2double(get(handles.demotheta,'str'));
        dfrag{1}.beta = str2double(get(handles.demobeta,'str'));
        dfrag{1}.ctheta = EC.D;
        dfrag{1}.cbeta = 1e-10;
        dfrag{1}.nds = 1;
        
        % Store information
        [EL, P, bldgEL, floorEL, compEL, im_ofint, IM, AAL] = calc_lossCurve(handles.fragDat, handles.imval, handles.stripeDat, nedps, nfloors, handles.pcoeff, EC, handles.cqty', handles.dqty', dfrag);
        handles.EL = EL;
        handles.P = P;
        handles.bldgEL = bldgEL;
        handles.floorEL = floorEL;
        handles.compEL = compEL;
        handles.IM = IM;
        handles.AAL = AAL;
        
        
        % Setting results strings
        AALv_str = sprintf('R: %10.2f     D: %10.2f     C: %10.2f',AAL.val(1:3));
        AALp_str = sprintf('R: %10.1f%%     D: %10.1f%%     C: %10.1f%%',100*AAL.perc(1:3));
        set(handles.outloss5,'str',AALv_str);
        set(handles.outloss6,'str',AALp_str);
        set(handles.outloss4,'str',sprintf('AAL: %10.2f', AAL.val(end)));
        
        save RESULTS
%         % Plotting damage functions in main axes
%         set(handles.MAINAXES4, 'Visible', 'on');
%         h = handles.MAINAXES4;
%         cla(h,'reset');
%         hold(h, 'all');
%    outloss     for i = 1:nds
%             plot(h, fragDat{1}.x(:,i), fragDat{1}.p, 'LineWidth', 1.2, 'DisplayName', strcat('DS',num2str(i)));
%         end
%         hold(h, 'off');
%         legend(h, '-dynamicLegend', 'Location', 'best');
%         title(h, [compnames{1} ': Fragility Curve']);
%         xlabel(h, compedp{1});
%         ylabel(h, 'P(DM|EDP)');
%         if handles.gridon
%             grid(h, 'on');
%         end
%         
%         
%         % Plotting loss functions in small axes
%         set(handles.SMALLAXES4, 'Visible', 'on');
%         h = handles.SMALLAXES4;
%         cla(h,'reset');
%         hold(h, 'all');
%         for i = 1:nds
%             plot(h, fragDat{1}.c(:,i), fragDat{1}.p, 'LineWidth', 1.2, 'DisplayName', strcat('DS',num2str(i)));
%         end
%         hold(h, 'off');
%         legend(h, '-dynamicLegend', 'Location', 'best');
%         title(h, [compnames{1} ': Loss Curves']);
%         xlabel(h, 'Loss');
%         ylabel(h, 'P(Loss|DM)');
%         if handles.gridon
%             grid(h, 'on');
%         end
        
    end


%% ---------------------------------------------------------------------------
    function exportdata_Callback(hObject,evendata) %#ok<INUSD>
        
    end

%% ---------------------------------------------------------------------------
    function gridon_Callback(hObject,evendata) %#ok<INUSD>
        
        if strcmp(get(handles.MAINAXES,'visible'),'on') && get(handles.gridon, 'Value');
            grid(handles.MAINAXES, 'on');
        elseif strcmp(get(handles.MAINAXES,'visible'),'on') && ~get(handles.gridon, 'Value');
            grid(handles.MAINAXES, 'off');
        end
        
    end

%% ---------------------------------------------------------------------------
    function logy_Callback(hObject,evendata) %#ok<INUSD>
        
        if strcmp(get(handles.MAINAXES,'visible'),'on') && get(handles.logy, 'Value');
            set(handles.MAINAXES, 'Yscale', 'log');
        elseif strcmp(get(handles.MAINAXES,'visible'),'on') && ~get(handles.logy, 'Value');
            set(handles.MAINAXES, 'Yscale', 'linear');
        end
        
        
    end

%% ---------------------------------------------------------------------------
    function logx_Callback(hObject,evendata) %#ok<INUSD>
        
        if strcmp(get(handles.MAINAXES,'visible'),'on') && get(handles.logx, 'Value');
            set(handles.MAINAXES, 'Xscale', 'log');
        elseif strcmp(get(handles.MAINAXES,'visible'),'on') && ~get(handles.logx, 'Value');
            set(handles.MAINAXES, 'Xscale', 'linear');
        end
        
        
    end

%% ---------------------------------------------------------------------------
    function pickedp_Callback(hObject,evendata) %#ok<INUSD>
        
        % Get value of interest
        val = get(handles.pickedp, 'Value');
        ngms = str2double(get(handles.ngms, 'str'));
        nstripe = handles.nstripe;
        nfloors = str2double(get(handles.nfloors, 'str'));
        imchoice = handles.imchoice;
        
        % Plotting median results in mainaxes
        set(handles.MAINAXES2, 'Visible', 'on');
        h = handles.MAINAXES2;
        cla(h,'reset');
        hold(h,'all');
        indplot = cell2mat(handles.uniqedp_vals{val});
        indplot = find(indplot==1);
        if numel(indplot>0) > nfloors
            floorplot = 0:nfloors;
        else
            floorplot = 1:nfloors;
        end
        grays = linspace(0.95,0.55,nstripe);
        for j = 1:nstripe
            plot(h, handles.stripeDat{j}(indplot,:), floorplot, '-', 'LineWidth', 1, 'Color', ones(1,3).*grays(j),'HandleVisibility','off');
        end
        for j = 1:nstripe
            plot(h, calc_geoMean(handles.stripeDat{j}(indplot,:),2), floorplot, 'o:', 'Linewidth', 1.2, 'DisplayName', strcat(handles.imchoice,'=',num2str(handles.imval(j)),handles.unitstr));
        end
        xlabel(h, handles.uniqedp{val});
        ylabel(h, 'Floor');
        title(h, strcat('Geomean Non-Collapse Stripe Analysis Summary: ',handles.uniqedp{val}));
        legend(h, '-dynamicLegend', 'Location', 'best');
        ylim(h, [min(floorplot) max(floorplot)]);
        
        if handles.gridon
            grid(h, 'on');
        end
        
        % Plotting variability results in mainaxes
        set(handles.SMALLAXES2, 'Visible', 'on');
        h = handles.SMALLAXES2;
        delete(findobj(h, 'Type', 'line'));
        hold(h,'all');
        
        for j = 1:nfloors
            allstripedat = NaN(nstripe, ngms);
            for k = 1:nstripe
                allstripedat(k, :) = handles.stripeDat{k}(indplot(j),:);
            end
            plot(h, handles.imval, nanstd(log(allstripedat),[],2), 'o:', 'Linewidth', 1.2, 'DisplayName', ['Floor ' num2str(j)]);
        end
        xlabel(h, imchoice);
        ylabel(h, ['\sigma_{ln} of ' handles.uniqedp{val}]);
        title(h, strcat('Variability Non-Collapse Stripe Analysis Summary: ', handles.uniqedp{val}));
        legend(h, '-dynamicLegend', 'Location', 'best');
        
    end

%% ---------------------------------------------------------------------------
    function pickcomp_Callback(hObject,evendata) %#ok<INUSD>
        
        % Get value of interest
        val = get(handles.pickcomp, 'Value');
        nds = str2double(get(handles.nds, 'str'));
        
        % Plotting damage functions in main axes
        set(handles.MAINAXES4, 'Visible', 'on');
        h = handles.MAINAXES4;
        cla(h,'reset');
        hold(h, 'all');
        for i = 1:nds
            plot(h, handles.fragDat{val}.x(:,i), handles.fragDat{val}.p, 'LineWidth', 1.2, 'DisplayName', strcat('DS',num2str(i)));
        end
        hold(h, 'off');
        legend(h, '-dynamicLegend', 'Location', 'best');
        title(h, [handles.compnames{val} ': Fragility Curve']);
        xlabel(h, handles.compedp{val});
        ylabel(h, 'P(DM|EDP)');
        if handles.gridon
            grid(h, 'on');
        end
        
        
        % Plotting loss functions in small axes
        set(handles.SMALLAXES4, 'Visible', 'on');
        h = handles.SMALLAXES4;
        cla(h,'reset');
        hold(h, 'all');
        for i = 1:nds
            plot(h, handles.fragDat{val}.c(:,i), handles.fragDat{val}.p, 'LineWidth', 1.2, 'DisplayName', strcat('DS',num2str(i)));
        end
        hold(h, 'off');
        legend(h, '-dynamicLegend', 'Location', 'best');
        title(h, [handles.compnames{val} ': Loss Curves']);
        xlabel(h, 'Loss, $');
        ylabel(h, 'P(Loss|DM)');
        if handles.gridon
            grid(h, 'on');
        end
        
        
    end


%% ---------------------------------------------------------------------------
    function openstripe_Callback(hObject,evendata) %#ok<INUSD>
        
        % Find directory
        datafile = uigetdir;
        set(handles.stripedir, 'str', datafile);
        [~, name] = fileparts(datafile);
        
        % Determine number of folders and update count
        FileList = dir(datafile);
        FileList = FileList(arrayfun(@(x) x.name(1), FileList) ~= '.');
        N = size(FileList, 1);
        
        % Update stripe count
        str = ['Number of stripes found in ', name, ': ', num2str(N)];
        set(handles.response1, 'str', str);
        handles.nstripe = N;
        
    end

%% ---------------------------------------------------------------------------
    function openfragility_Callback(hObject,evendata) %#ok<INUSD>
        
        % Find directory
        [filename, pathname]  = uigetfile('*.csv', 'Select csv file with fragility and loss info...');
        filelocation = fullfile(pathname,filename);
        set(handles.fragilitydir, 'str', filelocation);
        
    end

%% ---------------------------------------------------------------------------
    function plotedpmaf_Callback(hObject,evendata) %#ok<INUSD>
        
        % Getting number of edp values and floors
        nedps = str2double(get(handles.nedps, 'str'));
        nfloors = str2double(get(handles.nfloors, 'str'));
        
        % Calculate EDP hazard curves
        if ~isfield(handles, 'lambda_edp_c')
            nval = numel(handles.uniqedp);
            typeEDP = size(nedps,1);
            for i = 1:nval
                indval = cell2mat(handles.uniqedp_vals{i});
                indval = indval == 1;
                typeEDP(indval) = i;
            end
            [lambda_edp_c, lambda_edp_nc, midedp_im] = calc_edpHazard(handles.imval, handles.stripeDat, nedps, handles.pcoeff, typeEDP);
            handles.lambda_edp_c = lambda_edp_c;
            handles.lambda_edp_nc = lambda_edp_nc;
            handles.midedp_im = midedp_im;
        end
        
         % Getting EDP and floor information
        val = get(handles.pickedp, 'Value');
        indplot = cell2mat(handles.uniqedp_vals{val});
        indplot = find(indplot==1);
        if numel(indplot>0) > nfloors
            floorplot = 0:nfloors;
        else
            floorplot = 1:nfloors;
        end
        
        % Plotting hazard curve given no collapse
        figure;
        subplot(1,2,1);
        hold all;
        for i = 1:numel(floorplot)
            plot(handles.midedp_im(:,indplot(i)), handles.lambda_edp_nc(:,indplot(i)), ':', 'LineWidth', 1.2, 'DisplayName', ['Floor ' num2str(floorplot(i))]);
        end
        hold off;
        set(gca,'YScale', 'log');
        xlabel('EDP'); ylabel('\lambda_{EDP}(edp)'); grid on;
        legend('-dynamicLegend','Location','NorthEast');
        title(['Hazard Curve for ' handles.uniqedp{val} ' given No Collapse']);
        
        
        % Plotting hazard curve considering collapse
        subplot(1,2,2);
        hold all;
        for i = 1:numel(floorplot)
            plot(handles.midedp_im(:,indplot(i)), handles.lambda_edp_c(:,indplot(i)), ':', 'LineWidth', 1.2, 'DisplayName', ['Floor ' num2str(floorplot(i))]);
        end
        hold off;
        set(gca,'YScale', 'log');
        xlabel('EDP'); ylabel('\lambda_{EDP}(edp)'); grid on;
        legend('-dynamicLegend','Location','NorthEast');
        title(['Hazard Curve for ' handles.uniqedp{val} ' with Collapse']);
        
        linkaxes;
        xlim([min(handles.midedp_im(:,indplot(1))) max(handles.midedp_im(:,indplot(1)))]);
        ylim([1e-6 1]);
    end

%% ---------------------------------------------------------------------------
    function plotedppdf_Callback(hObject,evendata) %#ok<INUSD>
        
        % Getting IM value of interest
        imPoint = str2double(get(handles.setedpim,'str'));
        
        % Getting number of edp values and floors
        nedps = str2double(get(handles.nedps, 'str'));
        nfloors = str2double(get(handles.nfloors, 'str'));
        
        % Getting interpolated or extrapolated values
        [thetaPoint, betaPoint] = calc_edpParam(handles.stripeDat, handles.imval, imPoint, nedps);
        
        % Getting EDP and floor information
        val = get(handles.pickedp, 'Value');
        indplot = cell2mat(handles.uniqedp_vals{val});
        indplot = find(indplot==1);
        if numel(indplot>0) > nfloors
            floorplot = 0:nfloors;
        else
            floorplot = 1:nfloors;
        end
        
        % Initialization
        n = 1500;
        p = linspace(1e-5,0.999,n)';
        range_edp = NaN(n, numel(floorplot));
        range_fedp = NaN(n, numel(floorplot));
        
        % Calculating range of each pdf
        for i = 1:numel(floorplot)
            range_edp(:, i)  = logninv(p, log(thetaPoint(indplot(i))), betaPoint(indplot(i)));
            range_fedp(:, i) = lognpdf(range_edp(:,i), log(thetaPoint(indplot(i))), betaPoint(indplot(i)));
        end
        
        % Opening figure and plotting PDF of each floor for chosen EDP and
        % IM value
        figure;
        hold all;
        for i = 1:numel(floorplot)
            plot(range_edp(:,i), range_fedp(:,i), ':', 'LineWidth', 1.2, 'DisplayName', ['Floor ' num2str(floorplot(i))]);
        end
        hold off;
        xlabel('EDP'); ylabel('f(EDP|IM)'); grid on;
        legend('-dynamicLegend','Location','NorthEast');
        title(['PDF of ' handles.uniqedp{val} ' for ' handles.imchoice ' = ' num2str(imPoint)]);
        
    end

%% ---------------------------------------------------------------------------
    function setquantity_Callback(hObject,evendata) %#ok<INUSD>
 
        handles.cqty = get(handles.t,'Data');
        close(handles.f);
        
    end

%% ---------------------------------------------------------------------------
    function interpHazard_Callback(hObject,evendata) %#ok<INUSD>
        
        % USGS data
        im = handles.shcdat(:,1);
        afe = handles.shcdat(:,2);
        
        % Processing inputs
        p = str2double(get(handles.pexceed,'str'));
        t = str2double(get(handles.texceed,'str'));
        
        % Calculating rate
        nu = -(1/t)*log(1-p);
        
        % Interpolating ground motion at that rate if within USGS data
        if nu >= min(afe) && nu <= max(afe)
            im_interp = exp(interp1(log(afe),log(im),log(nu)));
        else
            im_interp = NaN;
        end
        
        % Displaying results
        set(handles.nuexceed,'str',num2str(nu));
        set(handles.imexceed,'str',num2str(im_interp));
        
    end

%% ---------------------------------------------------------------------------
    function imLoss_Callback(hObject,evendata) %#ok<INUSD>
        
        % Getting IM value
        imloss = str2double(get(handles.imloss,'str'));
        
        % Accessing loss data
        im = handles.IM;
        el = [handles.EL.R handles.EL.D handles.EL.C handles.EL.T];

        % Interpolating to get expected loss at requested IM value
        el_interp = exp(interp1(log(im),log(el),log(imloss)));
        
        % Displaying results
        ELv_str = sprintf('R: %10.2f     D: %10.2f     C: %10.2f',el_interp(1:3));
        set(handles.outloss3,'str',ELv_str);
        set(handles.outloss2,'str',sprintf('E[L|IM]: %10.2f', el_interp(end)));
        
    end


end
